apiVersion: config.openshift.io/v1
kind: OAuth
metadata:
  name: cluster
  namespace: openshift-config
spec:
  identityProviders:
  - name: my_remote_basic_auth_provider
    challenge: true
    login: true
    mappingMethod: claim
    type: BasicAuth
    basicAuth:
      url: https://www.example.com/
      ca:
        name: ""
      tlsClientCert:
        name: my_remote_basic_auth_provider-client-cert-secret
      tlsClientKey:
        name: my_remote_basic_auth_provider-client-key-secret
  - name: github123456789
    challenge: false
    login: true
    mappingMethod: claim
    type: GitHub
    github:
      hostname: test.example.com
      ca:
        name: github.crt
      clientID: 2d85ea3f45d6777bffd7
      clientSecret:
        name: github123456789-secret
      organizations:
      - myorganization1
      - myorganization2
      teams:
      - myorganization1/team-a
      - myorganization2/team-b
  - name: gitlab123456789
    challenge: true
    login: true
    mappingMethod: claim
    type: GitLab
    gitlab:
      url: https://gitlab.com/
      ca:
        name: ""
      clientID: fake-id
      clientSecret:
        name: gitlab123456789-secret
  - name: google123456789123456789
    challenge: false
    login: true
    mappingMethod: claim
    type: Google
    google:
      clientID: 82342890327-tf5lqn4eikdf4cb4edfm85jiqotvurpq.apps.googleusercontent.com
      clientSecret:
        name: google123456789123456789-secret
      hostedDomain: test.example.com
  - name: htpasswd_auth
    challenge: true
    login: true
    mappingMethod: claim
    type: HTPasswd
    htpasswd:
      fileData:
        name: htpasswd_auth-secret
  - name: my_keystone_provider
    challenge: true
    login: true
    mappingMethod: claim
    type: Keystone
    keystone:
      domainName: default
      url: http://fake.url:5000
      ca:
        name: keystone.pem
      tlsClientCert:
        name: my_keystone_provider-client-cert-secret
      tlsClientKey:
        name: my_keystone_provider-client-key-secret
  - name: my_ldap_provider
    challenge: true
    login: true
    mappingMethod: claim
    type: LDAP
    ldap:
      attributes:
        id:
        - dn
        email:
        - mail
        name:
        - cn
        preferredUsername:
        - uid
      bindDN: "123"
      bindPassword: ""
      ca:
        name: my-ldap-ca-bundle.crt
      insecure: false
      url: ldap://ldap.example.com/ou=users,dc=acme,dc=com?uid
  - name: my_request_header_provider
    challenge: true
    login: true
    mappingMethod: claim
    type: RequestHeader
    requestHeader:
      challengeURL: https://example.com
      loginURL: https://example.com
      ca:
        name: cert.crt
      —ÅlientCommonNames:
      - my-auth-proxy
      headers:
      - X-Remote-User
      - SSO-User
      emailHeaders:
      - X-Remote-User-Email
      nameHeaders:
      - X-Remote-User-Display-Name
      preferredUsernameHeaders:
      - X-Remote-User-Login
  - name: my_openid_connect
    challenge: false
    login: true
    mappingMethod: claim
    type: OpenID
    openID:
      clientID: testid
      clientSecret:
        name: my_openid_connect-secret
      claims:
        preferredUsername:
        - preferred_username
        - email
        name:
        - nickname
        - given_name
        - name
        email:
        - custom_email_claim
        - email
      urls:
        authorize: https://myidp.example.com/oauth2/authorize
        token: https://myidp.example.com/oauth2/token
